
# To delete a node from linked list    
class Node:   
    def __init__(self, data):  
        self.data = data  
        self.next = None
class LinkedList:   
    def __init__(self):  
        self.head = None  
    def push(self, new_data):  
        new_node = Node(new_data)  
        new_node.next = self.head  
        self.head = new_node    
    # delete the first occurence of key in linked list  
    def deleteNode(self, key):  
        temp = self.head  
        # If head node itself holds the key to be deleted  
        if (temp is not None):  
            if (temp.data == key):  
                self.head = temp.next
                temp = None
                return
        while(temp is not None):  
            if temp.data == key:  
                break
            prev = temp  
            temp = temp.next
        if(temp == None):  
            return  
        prev.next = temp.next
        temp = None  
    def printList(self):  
        temp = self.head  
        while(temp):  
            print (" %d" %(temp.data)),  
            temp = temp.next
# Driver program  
llist = LinkedList()  
llist.push(4)  
llist.push(3)  
llist.push(0)  
llist.push(1)  
  
print ("Created Linked List: ") 
llist.printList()  
llist.deleteNode(1)  
print ("\nLinked List after Deletion of 1:") 
llist.printList()
Created Linked List: 
 1
 0
 3
 4

Linked List after Deletion of 1:
 0
 3
 4
